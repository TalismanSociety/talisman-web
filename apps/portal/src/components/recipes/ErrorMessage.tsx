import type { DetailedHTMLProps, HTMLAttributes, ReactNode } from 'react'
import { Text } from '@talismn/ui/atoms/Text'

import { cn } from '@/util/cn'

export type ErrorMessageProps = {
  title: ReactNode
  message: ReactNode
  actions?: ReactNode
  orientation?: 'vertical' | 'horizontal'
}

export const ErrorMessage = Object.assign(
  (props: ErrorMessageProps) => (
    <article
      css={[
        { display: 'flex', alignItems: 'center', gap: '1.6rem' },
        props.orientation === 'horizontal' ? {} : { flexDirection: 'column', textAlign: 'center' },
      ]}
    >
      <figure css={{ margin: 0 }}>
        <TalismanDeadHandIcon
          className={cn(
            'text-[20rem] text-red-500',
            props.orientation === 'horizontal' ? 'text-[6rem]' : 'text-[10rem]'
          )}
        />
      </figure>
      <div
        css={[
          { display: 'flex', flexDirection: 'column' },
          props.orientation === 'horizontal'
            ? { flexDirection: 'row', gap: '0.8rem' }
            : { alignItems: 'center', gap: '1.6rem' },
        ]}
      >
        <div>
          <Text.BodyLarge as="header" alpha="high">
            {props.title}
          </Text.BodyLarge>
          <Text.BodySmall>{props.message}</Text.BodySmall>
        </div>
        {props.actions}
      </div>
    </article>
  ),
  {
    Actions: (props: DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>) => (
      <div {...props} css={{ display: 'flex', alignItems: 'center', gap: '0.8rem' }} />
    ),
  }
)

function TalismanDeadHandIcon({ className }: { className?: string }) {
  return (
    <svg className={className} width="1em" height="1em" viewBox="0 0 128 128" xmlns="http://www.w3.org/2000/svg">
      <path
        fill="currentColor"
        fillRule="evenodd"
        stroke="none"
        d="M 25.349728 54.346054 C 27.378103 55.318001 29.407148 56.290253 31.502325 57.005775 L 35.786789 58.469055 C 43.06493 60.762207 50.24847 59.834999 57.299564 57.639862 C 60.966396 55.80056 64.752762 56.091606 68.504379 57.639862 C 75.92411 60.702103 82.388115 60.694855 90.248535 58.5233 L 90.257065 58.469055 L 94.541412 57.005775 C 96.636337 56.290253 98.665443 55.318001 100.693939 54.346054 C 106.28389 51.667564 114.987282 52.49865 120.865524 59.200912 C 123.559616 62.273216 121.475052 66.718475 117.596642 68.004562 C 115.726631 68.625061 114.032761 69.675278 112.449219 70.848602 C 112.27002 70.981483 112.087776 71.114365 111.903091 71.246628 C 107.018356 74.751999 103.875046 80.002434 103.562363 86.006248 L 103.4179 88.776535 C 103.428268 89.745064 103.409363 90.717865 103.35878 91.691879 C 101.930061 105.361069 93.111465 117.141937 80.398628 122.364952 C 69.295547 126.926628 56.841137 126.926628 45.737751 122.364952 C 33.02528 117.141937 24.206812 105.361069 22.777721 91.691879 L 22.481615 86.006248 C 22.168869 80.002434 19.025616 74.751999 14.141013 71.246628 C 13.956144 71.114365 13.773714 70.981483 13.594332 70.848602 C 12.011093 69.675278 10.317348 68.625061 8.447146 68.004562 C 4.568655 66.718475 2.483895 62.273216 5.178228 59.200912 C 11.056335 52.49865 19.759726 51.667564 25.349728 54.346054 Z M 91.664459 91.440155 C 91.664459 91.440155 78.840073 109.872757 63.020496 109.872757 C 47.201092 109.872757 34.3769 91.440155 34.3769 91.440155 C 34.3769 91.440155 47.201092 73.007538 63.020496 73.007538 C 78.840073 73.007538 91.664459 91.440155 91.664459 91.440155 Z M 63.143021 95.726746 L 70.559158 103.142853 L 74 99.701828 L 66.584114 92.285721 L 74 84.869598 L 70.559158 81.428574 L 63.143021 88.844681 L 55.726807 81.428574 L 52.285713 84.869598 L 59.701946 92.285721 L 52.285713 99.701828 L 55.726807 103.142853 L 63.143021 95.726746 Z M 27.99049 51.479645 L 28.580633 28.829681 C 28.580633 16.54509 35.76844 10.459549 46.165638 13.541481 C 47.079861 13.812477 48.393139 15.04348 48.393139 16.135857 L 48.604465 38.283516 C 48.615376 39.430885 49.548618 40.355225 50.695988 40.355225 C 51.851154 40.355225 52.787624 39.418755 52.787624 38.263588 L 52.787624 11.044266 C 52.787624 5.277542 57.46249 0.602676 63.228947 0.602676 C 68.995659 0.602676 73.670708 5.277527 73.670708 11.044266 L 73.670708 38.263588 C 73.670708 39.418755 74.606934 40.355225 75.762589 40.355225 C 76.909714 40.355225 77.842896 39.430885 77.853867 38.283577 L 78.065369 16.148048 C 78.065369 15.045853 79.444115 13.810951 80.366318 13.541481 C 89.377525 10.908279 97.657295 15.82061 97.657295 28.590141 L 98.229645 51.269608 C 88.521141 56.225098 79.180191 57.245316 68.469032 53.916214 C 64.382172 51.912163 61.437565 52.265503 57.225811 53.913963 C 46.604252 56.300064 37.572994 56.407524 27.99049 51.479645 Z"
      />
    </svg>
  )
}
